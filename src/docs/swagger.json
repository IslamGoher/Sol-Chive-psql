{
  "openapi": "3.0.0",
  "info": {
    "title": "Sol-Chive API",
    "description": "An API documentation for Sol-Chive website",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "local server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "authentication methods"
    },
    {
      "name": "Solution",
      "description": "solution APIs"
    },
    {
      "name": "User",
      "description": "user APIs"
    }
  ],
  "paths": {
    "/api/v1/user": {
      "get": {
        "summary": "Get full user profile for authenticated or Anonymous user",
        "tags": ["User"],
        "description": "Get user data for user profile page.",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "description": "email of user, enter it to get user data",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "user name"
                    },
                    "picture": {
                      "type": "string",
                      "description": "link to user picture"
                    },
                    "email": {
                      "type": "string",
                      "description": "user email"
                    },
                    "about": {
                      "type": "string",
                      "description": "about the user"
                    },
                    "contacts": {
                      "type": "string",
                      "description": "user contacts such as phone number and linkedin profile"
                    },
                    "problem_count": {
                      "type": "integer",
                      "description": "description user wrote about him self"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request, which mean that email is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number",
                      "description": "status code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message that inform user what is the problem"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found, which mean that there's no user found with given email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number",
                      "description": "status code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message that inform user what is the problem"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/anonymous/solutions/{email}": {
      "get": {
        "summary": "Get all user solutions for Anonymous user",
        "tags": ["Solution"],
        "description": "List all user solutions for unauthenticated user.",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "description": "email of user, enter it to get user data",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "page of solution data",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sortbydate",
            "in": "query",
            "required": false,
            "description": "either 'asc' or 'desc'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "description": "the source of solution, example: leetcode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "description": "tag that solution belong to, example: tree, graph",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "perfectsolution",
            "in": "query",
            "required": false,
            "description": "chose solutions that must has perfect solution in it",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pageNumber": {
                      "type": "number",
                      "description": "current page number"
                    },
                    "totalPages": {
                      "type": "number",
                      "description": "the number of all pages"
                    },
                    "count": {
                      "type": "number",
                      "description": "number of solutions in current page"
                    },
                    "solutions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "solution_id": {
                            "type": "number",
                            "description": "the id of the solution"
                          },
                          "created_on": {
                            "type": "string",
                            "description": "the date that solution created on (YYYY-MM-DD HH:MM:SS)"
                          },
                          "title": {
                            "type": "string",
                            "description": "the title of the solution"
                          },
                          "link": {
                            "type": "string",
                            "description": "the url link of the solution"
                          },
                          "source": {
                            "type": "string",
                            "description": "the source of the solution"
                          },
                          "tags": {
                            "type":"array",
                            "items": {
                              "type":"string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request, which mean that email is missing or invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number",
                      "description": "status code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message that inform user what is the problem"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found, which mean that there's no solutions founded for given user email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number",
                      "description": "status code"
                    },
                    "message": {
                      "type": "string",
                      "description": "message that inform user what is the problem"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
